<!ENTITY % use.in.umbraco "IGNORE">
<!ENTITY % use.in.textmate "INCLUDE">

<![ %use.in.umbraco; [
	<!ENTITY GetMediaFile "umb:GetMedia(., false())">
	<!ENTITY GetMediaFolder "umb:GetMedia(., true())">
	<!ENTITY GetDAMPMediaFolder "umb:GetMedia(DAMP/mediaItem/Folder/@id, true())">
	<!ENTITY random-ns-uri "urn:Exslt.ExsltMath">
	<!ENTITY nodeset-ns-uri "urn:schemas-microsoft-com:xslt">
	<!ENTITY makeNodeSetOfStrings "make:node-set($stringProxy)">
	<!ENTITY config-file "../../config/CroppingSettings.config">
	<!ENTITY cropUp-config-file "../../config/Eksponent.CropUp.config">
	<!ENTITY CropUpUrlByMediaId "cropup:UrlByMediaId(@id, $cropUpArgs)">
]]>

<![ %use.in.textmate; [
	<!ENTITY GetMediaFile "document('test/media.xml')//*[@id = current()]">
	<!ENTITY GetMediaFolder "&GetMediaFile;">
	<!ENTITY GetDAMPMediaFolder "document('test/media.xml')//*[@id = current()/DAMP/mediaItem/Folder/@id]">
	<!ENTITY random-ns-uri "http://exslt.org/math">
	<!ENTITY nodeset-ns-uri "urn:otgonnaneed:it">
	<!ENTITY makeNodeSetOfStrings "$stringProxy">
	<!ENTITY config-file "CroppingSettings.config">
	<!ENTITY cropUp-config-file "test/Eksponent.CropUp.config">
	<!ENTITY CropUpUrlByMediaId "concat('/Images/media/', $cropUpArgs, '/', substring-after(umbracoFile, '/media/'))">
]]>
