<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE x:description [
	<!-- Paging constants -->
	<!ENTITY firstPage "&#171;">
	<!ENTITY prevPage "&#8249; Previous">
	<!ENTITY nextPage "Next &#8250;">
	<!ENTITY lastPage "&#187;">
	<!ENTITY pagerParam "p">
	<!ENTITY testURL "/">
	<!ENTITY gapFiller "...">
]>
<x:description
	stylesheet="PaginationHelperSample.xslt"
	xslt-version="1.0"
	xmlns:x="http://www.jenitennison.com/xslt/xspec"
>
	<x:scenario label="Using all the defaults on people.xml">
		<x:context href="fixtures/people.xml" select="/people" />
		<x:expect label="it should render 10 person elements and a pager">
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
			<ul class="pager">...</ul>
		</x:expect>
	</x:scenario>
	
	<x:scenario label="when Paginating page 2 of people.xml ">
		<x:call template="PaginateSelection">
			<x:param name="selection" select="document('fixtures/people.xml', /)/people/person" />
			<x:param name="page" select="2" />
		</x:call>
		<x:expect label="it should render 4 person elements and a pager">
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
			<ul class="pager">...</ul>
		</x:expect>
	</x:scenario>
	
	<x:scenario label="when calling RenderPager">
		<x:call template="RenderPager">
			<x:param name="selection" select="document('fixtures/people.xml', /)/people/person" />
		</x:call>
		<x:expect label="it should produce the pager for page 1">
			<ul class="pager">
				<li class="prev disabled"><span>&prevPage;</span></li>
				<li class="current"><span>1</span></li>
				<li><a rel="next" href="&testURL;?&pagerParam;=2">2</a></li>
				<li class="next"><a rel="next" href="&testURL;?&pagerParam;=2">&nextPage;</a></li>
			</ul>
		</x:expect>
		<x:scenario label="and sending the `$pagerClass` param">
			<x:call>
				<x:param name="pagerClass" select="'pagination'" />
			</x:call>
			<x:expect label="it should use that CSS class instead of the default 'pager' class">
				<ul class="pagination">...</ul>
			</x:expect>
		</x:scenario>
		<x:scenario label="and sending the `$currentClass` param">
			<x:call>
				<x:param name="currentClass" select="'activated'" />
			</x:call>
			<x:expect label="it should use that CSS class instead of the default 'current' class">
				<ul class="...">
					<li class="...">...</li>
					<li class="activated">...</li>
					<li>...</li>
					<li class="...">...</li>
				</ul>
			</x:expect>
		</x:scenario>
	</x:scenario>

	<x:scenario label="when specifying custom classes to PageinateSelection">
		<x:call template="PaginateSelection">
			<x:param name="selection" select="document('fixtures/people.xml', /)/people/person" />
			<x:param name="page" select="2" />
			<x:param name="pagerClass" select="'pagination'" />
			<x:param name="currentClass" select="'active'" />
			<x:param name="prevClass" select="'backwards'" />
			<x:param name="nextClass" select="'forwards'" />
		</x:call>
		<x:expect label="they should all fall through to the pager control">
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
			<ul class="pagination">
			<li class="backwards">...</li>
			<li>...</li>
			<li class="active">...</li>
			<li class="forwards disabled">...</li>
			</ul>
		</x:expect>
	</x:scenario>
	
	<x:scenario label="when calling RenderPager for page 1">
		<x:call template="RenderPager">
			<x:param name="page" select="1" />
			<x:param name="selection" select="document('fixtures/people.xml', /)/people/person" />
		</x:call>
		<x:expect label="it should produce the pager for page 1">
			<ul class="pager">
				<li class="prev disabled"><span>&prevPage;</span></li>
				<li class="current"><span>1</span></li>
				<li><a rel="next" href="&testURL;?&pagerParam;=2">2</a></li>
				<li class="next"><a rel="next" href="&testURL;?&pagerParam;=2">&nextPage;</a></li>
			</ul>
		</x:expect>
	</x:scenario>

	<x:scenario label="when calling RenderPager for page 2">
		<x:call template="RenderPager">
			<x:param name="page" select="2" />
			<x:param name="selection" select="document('fixtures/people.xml', /)/people/person" />
		</x:call>
		<x:expect label="it should produce the pager for page 2">
			<ul class="pager">
				<li class="prev"><a rel="prev start" href="&testURL;">&prevPage;</a></li>
				<li><a rel="prev start" href="&testURL;">1</a></li>
				<li class="current"><span>2</span></li>
				<li class="next disabled"><span>&nextPage;</span></li>
			</ul>
		</x:expect>
		<x:expect label="it should not add &pagerParam;=1 to the Page 1 link (issue #7)" test="not(//a[contains(@href, '&pagerParam;=1')])" />
	</x:scenario>

	<x:scenario label="when calling RenderPager for page 3 of 'lots-of-people.xml'">
		<x:call template="RenderPager">
			<x:param name="selection" select="document('fixtures/lots-of-people.xml', /)/people/person" />
			<x:param name="page" select="3" />
		</x:call>
		<x:expect label="it should produce a pager with 7(+2) pages" test="count(/ul/li) = 9" />
		<x:expect label="the third page should be marked 'current'" test="/ul/li[4]/@class = 'current'" />
		<x:expect label="the Previous link should be active" test="boolean(/ul/li[1]/a[contains(@href, '&pagerParam;=2')])" />
		<x:expect label="and the Next link should also be active" test="boolean(/ul/li[last()]/a[contains(@href, '&pagerParam;=4')])" />
	</x:scenario>
	
	<x:scenario label="when calling RenderPager for 'lots-of-people.xml' with 3 per page">
		<x:call template="RenderPager">
			<x:param name="perPage" select="3" />
			<x:param name="selection" select="document('fixtures/lots-of-people.xml', /)/people/person" />
		</x:call>
		<x:expect label="it should render links for pages 1—9 with a gap and then links for the final 2 pages">
			<ul class="pager">
				<li class="prev disabled"><span>&prevPage;</span></li>
				<li class="current"><span>1</span></li>
				<li><a rel="next" href="...">2</a></li>
				<li><a href="...">3</a></li>
				<li><a href="...">4</a></li>
				<li><a href="...">5</a></li>
				<li><a href="...">6</a></li>
				<li><a href="...">7</a></li>
				<li><a href="...">8</a></li>
				<li><a href="...">9</a></li>
				<li class="gap"><span>&gapFiller;</span></li>
				<li><a href="...">23</a></li>
				<li><a href="...">24</a></li>
				<li class="next"><a rel="next" href="&testURL;?&pagerParam;=2">&nextPage;</a></li>
			</ul>
		</x:expect>
		
		<x:scenario label="and page = 5">
			<x:call>
				<x:param name="page" select="5" />
			</x:call>
			<x:expect label="it should render links for pages 1—9 with a gap and then links for the final 2 pages">
				<ul class="pager">
					<li class="prev"><a rel="prev" href="&testURL;?&pagerParam;=4">&prevPage;</a></li>
					<li><a rel="start" href="...">1</a></li>
					<li><a href="...">2</a></li>
					<li><a href="...">3</a></li>
					<li><a rel="prev" href="...">4</a></li>
					<li class="current"><span>5</span></li>
					<li><a rel="next" href="...">6</a></li>
					<li><a href="...">7</a></li>
					<li><a href="...">8</a></li>
					<li><a href="...">9</a></li>
					<li class="gap"><span>&gapFiller;</span></li>
					<li><a href="...">23</a></li>
					<li><a href="...">24</a></li>
					<li class="next"><a rel="next" href="&testURL;?&pagerParam;=6">&nextPage;</a></li>
				</ul>
			</x:expect>
		</x:scenario>

		<x:scenario label="and page = 7">
			<x:call>
				<x:param name="page" select="7" />
			</x:call>
			<x:expect label="it should render links for pages 1—11 with a gap and then the links for the final two pages">
				<ul class="pager">
					<li class="prev"><a rel="prev" href="&testURL;?&pagerParam;=6">&prevPage;</a></li>
					<li><a rel="start" href="&testURL;">1</a></li>
					<li><a href="...">2</a></li>
					<li><a href="...">3</a></li>
					<li><a href="...">4</a></li>
					<li><a href="...">5</a></li>
					<li><a rel="prev" href="...">6</a></li>
					<li class="current"><span>7</span></li>
					<li><a rel="next" href="...">8</a></li>
					<li><a href="...">9</a></li>
					<li><a href="...">10</a></li>
					<li><a href="...">11</a></li>
					<li class="gap"><span>&gapFiller;</span></li>
					<li><a href="...">23</a></li>
					<li><a href="...">24</a></li>
					<li class="next"><a rel="next" href="&testURL;?&pagerParam;=8">&nextPage;</a></li>
				</ul>
			</x:expect>
		</x:scenario>
		
		<x:scenario label="and page = 8">
			<x:call>
				<x:param name="page" select="8" />
			</x:call>
			<x:expect label="it should render links for pages 1—12 with a gap on the right">
				<ul class="pager">
					<li class="prev"><a rel="prev" href="&testURL;?&pagerParam;=7">&prevPage;</a></li>
					<li><a rel="start" href="&testURL;">1</a></li>
					<li><a href="...">2</a></li>
					<li><a href="...">3</a></li>
					<li><a href="...">4</a></li>
					<li><a href="...">5</a></li>
					<li><a href="...">6</a></li>
					<li><a rel="prev" href="...">7</a></li>
					<li class="current"><span>8</span></li>
					<li><a rel="next" href="...">9</a></li>
					<li><a href="...">10</a></li>
					<li><a href="...">11</a></li>
					<li><a href="...">12</a></li>
					<li class="gap"><span>&gapFiller;</span></li>
					<li><a href="...">23</a></li>
					<li><a href="...">24</a></li>
					<li class="next"><a rel="next" href="&testURL;?&pagerParam;=9">&nextPage;</a></li>
				</ul>
			</x:expect>
		</x:scenario>
		
		<x:scenario label="and page = 9">
			<x:call>
				<x:param name="page" select="9" />
			</x:call>
			<x:expect label="it should render links for pages 5—13 with gaps before and after">
				<ul class="pager">
					<li class="prev"><a rel="prev" href="&testURL;?&pagerParam;=8">&prevPage;</a></li>
					<li><a rel="start" href="&testURL;">1</a></li>
					<li><a href="...">2</a></li>
					<li class="gap"><span>&gapFiller;</span></li>
					<li><a href="...">5</a></li>
					<li><a href="...">6</a></li>
					<li><a href="...">7</a></li>
					<li><a rel="prev" href="...">8</a></li>
					<li class="current"><span>9</span></li>
					<li><a rel="next" href="...">10</a></li>
					<li><a href="...">11</a></li>
					<li><a href="...">12</a></li>
					<li><a href="...">13</a></li>
					<li class="gap"><span>&gapFiller;</span></li>
					<li><a href="...">23</a></li>
					<li><a href="...">24</a></li>
					<li class="next"><a rel="next" href="&testURL;?&pagerParam;=10">&nextPage;</a></li>
				</ul>
			</x:expect>
		</x:scenario>
		
		<x:scenario label="and page = 16">
			<x:call>
				<x:param name="page" select="16" />
			</x:call>
			<x:expect label="it should render links for pages 12—20 with a gap on each side">
				<ul class="pager">
					<li class="prev"><a rel="prev" href="&testURL;?&pagerParam;=15">&prevPage;</a></li>
					<li><a rel="start" href="...">1</a></li>
					<li><a href="...">2</a></li>
					<li class="gap"><span>&gapFiller;</span></li>
					<li><a href="...">12</a></li>
					<li><a href="...">13</a></li>
					<li><a href="...">14</a></li>
					<li><a rel="prev" href="...">15</a></li>
					<li class="current"><span>16</span></li>
					<li><a rel="next" href="...">17</a></li>
					<li><a href="...">18</a></li>
					<li><a href="...">19</a></li>
					<li><a href="...">20</a></li>
					<li class="gap"><span>&gapFiller;</span></li>
					<li><a href="...">23</a></li>
					<li><a href="...">24</a></li>
					<li class="next"><a rel="next" href="&testURL;?&pagerParam;=17">&nextPage;</a></li>
				</ul>
			</x:expect>
		</x:scenario>
		
		<x:scenario label="and page = 20">
			<x:call>
				<x:param name="page" select="20" />
			</x:call>
			<x:expect label="it should render links for pages 1 and 2 with a gap and then links for pages 16—24">
				<ul class="pager">
					<li class="prev"><a rel="prev" href="&testURL;?&pagerParam;=19">&prevPage;</a></li>
					<li><a rel="start" href="...">1</a></li>
					<li><a href="...">2</a></li>
					<li class="gap"><span>&gapFiller;</span></li>
					<li><a href="...">16</a></li>
					<li><a href="...">17</a></li>
					<li><a href="...">18</a></li>
					<li><a rel="prev" href="...">19</a></li>
					<li class="current"><span>20</span></li>
					<li><a rel="next" href="...">21</a></li>
					<li><a href="...">22</a></li>
					<li><a href="...">23</a></li>
					<li><a href="...">24</a></li>
					<li class="next"><a rel="next" href="&testURL;?&pagerParam;=21">&nextPage;</a></li>
				</ul>
			</x:expect>
		</x:scenario>
		
		<x:scenario label="then specifying maxItems = 10">
			<x:call>
				<x:param name="maxItems" select="10" />
			</x:call>
			<x:expect label="it should only render 4 pages">
				<ul class="pager">
					<li class="prev disabled">...</li>
					<li class="current">...</li>
					<li>...</li>
					<li>...</li>
					<li>...</li>
					<li class="next">...</li>
				</ul>
			</x:expect>
		</x:scenario>
	</x:scenario>
	
	<x:scenario label="when specifying false() for the 'showPager' parameter">
		<x:call template="PaginateSelection">
			<x:param name="selection" select="document('fixtures/people.xml', /)/people/person" />
			<x:param name="showPager" select="false()" />
		</x:call>
		
		<x:expect label="it should only produce the page output">
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
		</x:expect>
		<x:expect label="not the pager &lt;ul&gt;" test="not(//ul[@class = 'pager'])" />
	</x:scenario>
	
	<x:scenario label="when specifying 10 for the 'maxItems' parameter with 3 perPage on page 4">
		<x:call template="PaginateSelection">
			<x:param name="selection" select="document('fixtures/lots-of-people.xml', /)/people/person" />
			<x:param name="maxItems" select="10" />
			<x:param name="perPage" select="3" />
			<x:param name="page" select="4" />
			<x:param name="showPager" select="false()" />
		</x:call>
		<x:expect label="it should only render the 10th (faked last) person">
			<p><a href="...">Sun Kwon</a></p>
		</x:expect>
	</x:scenario>
	
	<x:scenario label="when 'maxItems' is equal to the number of items and you're on the last page'">
		<x:call template="PaginateSelection">
			<x:param name="selection" select="document('fixtures/people.xml', /)/people/person" />
			<x:param name="maxItems" select="14" />
			<x:param name="perPage" select="7" />
			<x:param name="page" select="2" />
			<x:param name="showPager" select="false()" />
		</x:call>
		<x:expect label="it should render a complete page">
			<p><a href="...">James Sawyer</a></p>
			<p><a href="...">...</a></p>
			<p><a href="...">Sun Kwon</a></p>
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
			<p><a href="christian.shepard@4815162342x.com">...</a></p>
			<p><a href="...">Juliet</a></p>
		</x:expect>
	</x:scenario>
	
	<x:scenario label="when 'maxItems' is larger than the number of items">
		<x:call template="PaginateSelection">
			<x:param name="selection" select="document('fixtures/people.xml', /)/people/person" />
			<x:param name="maxItems" select="20" />
			<x:param name="perPage" select="7" />
			<x:param name="showPager" select="false()" />
		</x:call>
		
		<x:scenario label="on page 1">
			<x:call>
				<x:param name="page" select="1" />
			</x:call>
			<x:expect label="it should render the complete page">
				<p><a href="...">Jack Shepard</a></p>
				<p><a href="...">Kate Austen</a></p>
				<p><a href="...">Hugo Reyes</a></p>
				<p><a href="...">...</a></p>
				<p><a href="...">...</a></p>
				<p><a href="...">...</a></p>
				<p><a href="...">...</a></p>
			</x:expect>
		</x:scenario>

		<x:scenario label="on page 2">
			<x:call>
				<x:param name="page" select="2" />
			</x:call>
			<x:expect label="it should also render the complete page">
				<p><a href="...">James Sawyer</a></p>
				<p><a href="...">...</a></p>
				<p><a href="...">Sun Kwon</a></p>
				<p><a href="...">...</a></p>
				<p><a href="...">...</a></p>
				<p><a href="christian.shepard@4815162342x.com">...</a></p>
				<p><a href="...">Juliet</a></p>
			</x:expect>
		</x:scenario>
	</x:scenario>
	
	<x:scenario label="when specifying 5 for the 'perPage' parameter">
		<x:call template="PaginateSelection">
			<x:param name="selection" select="document('fixtures/people.xml', /)/people/person" />
			<x:param name="showPager" select="false()" />
			<x:param name="perPage" select="5" />
		</x:call>
		
		<x:expect label="it should only produce 5 items in the output">
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
			<p><a href="...">...</a></p>
		</x:expect>
	</x:scenario>
	
	<x:scenario label="when parsing a 'token'">
		<x:context mode="parse">
			<token>id=1234</token>
		</x:context>
		<x:expect label="it should produce an option element with a @key attribute">
			<option key="id">1234</option>
		</x:expect>
	</x:scenario>
	
	<x:scenario label="when calling parseOptions" pending="Can not use extensions with Saxon HE">
		<x:call template="parseOptions">
			<x:param name="options" select="'key1=value1&amp;key2=value2&amp;key3=value3'" />
		</x:call>
		<x:expect label="it should produce an option element for each set of key=value">
			<options>
				<option key="key1">value1</option>
				<option key="key2">value2</option>
				<option key="key3">value3</option>
			</options>
		</x:expect>
	</x:scenario>
	
</x:description>